version: '3'
services:
  ngrok:
    image: shkoliar/ngrok:1.1.0
    container_name: ngrok
    ports:
      - 4551:4551
    links:
      - webserver
    environment:
      - DOMAIN=webserver
      - PORT=80
      - BIND_TLS=false
      - REGION=ap
      - DEBUG=true
    networks:
      - crime-network
    depends_on:
      - webserver
  webserver:
    image: nginx:alpine
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - crime-network
    depends_on:
      - api
      - auth
      - ui

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    expose:
      - 2181
    networks:
      - crime-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    hostname: kafka
    ports:
      - 29092:29092
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER://kafka:9092,LISTENER_HOST://localhost:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka:9092,LISTENER_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    depends_on:
      - zookeeper
    networks:
      - crime-network

  mongodb:
    image: mongo:5.0.5
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=$MONGODB_NAME
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ADMIN_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ADMIN_PASSWORD
    volumes:
      - ./mongodb_data:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - crime-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://$MONGO_ADMIN_USERNAME:$MONGO_ADMIN_PASSWORD@mongodb:27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_ADMIN_USERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_ADMIN_PASSWORD
    networks:
      - crime-network
    depends_on:
      - mongodb

  auth:
    build: ./auth
    image: auth
    container_name: auth
    expose:
      - 5000
    volumes:
      - ./auth:/code
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=auth
      - UVICORN_PORT=5000
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/auth/v1/
      - GAUTH_CLIENT_ID
      - JWT_ALGORITHM
      - JWT_EXP_DELTA_SECONDS
      - JWT_REFRESH_EXP_DELTA_SECONDS
      - MONGODB_URL
      - MONGODB_NAME
    depends_on:
      - mongodb
    networks:
      - crime-network

  api:
    build: ./api
    image: api
    container_name: api
    expose:
      - 5001
    volumes:
      - ./api/api:/code/api
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=api
      - UVICORN_PORT=5001
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/api/v1/
      - JWT_ALGORITHM
      - KAFKA_CRIME_TOPIC
      - MONGODB_URL
      - MONGODB_NAME
    depends_on:
      - kafka
      - mongodb
      - mongo-connect
    networks:
      - crime-network

  mongo-connect:
    image: confluentinc/cp-kafka-connect-base:7.0.1
    build: ./mongo-connect
    container_name: mongo-connect
    hostname: mongo-connect
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 8083:8083
    expose:
      - 8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: mongo-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    networks:
      - crime-network

  ui:
    build: ./ui
    image: ui
    container_name: ui
    expose:
      - 3000
    volumes:
      - ./ui/public:/code/public
      - ./ui/src:/code/src
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=ui
      # React requires env vars to be prefixed with REACT_APP_
      - REACT_APP_GAUTH_CLIENT_ID=$GAUTH_CLIENT_ID
      - REACT_APP_GAUTH_CALLBACK_URI=$GAUTH_CALLBACK_URI
    networks:
      - crime-network
    stdin_open: true
    depends_on:
      - api
      - auth

networks:
  crime-network:
    driver: bridge
