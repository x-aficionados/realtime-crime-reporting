version: '3'
services:
  webserver:
    image: nginx:alpine
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - crime-network
    depends_on:
      - zookeeper
      - kafka
      - api
      - ui

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - 2181
    networks:
      - crime-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - crime-network

  mongodb:
    image: mongo
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=$MONGODB_NAME
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ADMIN_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ADMIN_PASSWORD
    volumes:
      - ./mongodb_data:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - crime-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://$MONGO_ADMIN_USERNAME:$MONGO_ADMIN_PASSWORD@mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_ADMIN_USERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_ADMIN_PASSWORD
    networks:
      - crime-network
    depends_on:
      - mongodb

  auth:
    build: ./auth
    image: auth
    container_name: auth
    expose:
      - 5000
    volumes:
      - ./auth:/code
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=auth
      - UVICORN_PORT=5000
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/auth/v1/
      - GAUTH_CLIENT_ID
      - JWT_ALGORITHM
      - JWT_EXP_DELTA_SECONDS
      - JWT_REFRESH_EXP_DELTA_SECONDS
      - MONGODB_URL
      - MONGODB_NAME
    depends_on:
      - mongodb
    networks:
      - crime-network

  api:
    build: ./api
    image: api
    container_name: api
    expose:
      - 5001
    volumes:
      - ./api/api:/code/api
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=api
      - UVICORN_PORT=5001
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/api/v1/
      - JWT_ALGORITHM
    depends_on:
      - kafka
      - mongodb
    networks:
      - crime-network

  ui:
    build: ./ui
    image: ui
    container_name: ui
    expose:
      - 3000
    volumes:
      - ./ui/public:/code/public
      - ./ui/src:/code/src
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=ui
      # React requires env vars to be prefixed with REACT_APP_
      - REACT_APP_GAUTH_CLIENT_ID=$GAUTH_CLIENT_ID
      - REACT_APP_GAUTH_CALLBACK_URI=$GAUTH_CALLBACK_URI
    networks:
      - crime-network
    stdin_open: true
    depends_on:
      - api
      - auth

networks:
  crime-network:
    driver: bridge
