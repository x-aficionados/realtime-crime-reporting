version: '3'
services:
  webserver:
    image: nginx:alpine
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - crime-network
    depends_on:
      - crimes-api
      - ui
      - users-api

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - 2181
    networks:
      - crime-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - crime-network

  crimes-api:
    build: ./crimes-api
    image: crimes-api
    container_name: crimes-api
    expose:
      - 5001
    volumes:
      - ./crimes-api/crimes_api:/code/crimes_api
    env_file:
      - .env
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=crime-producer
      - UVICORN_PORT=5001
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/api/v1/
    depends_on:
      - kafka
      - connect
      - mongo-db
    networks:
      - crime-network

  connect:
    image: confluentinc/cp-kafka-connect-base:latest
    build:
      context: .
      dockerfile: Dockerfile-MongoConnect
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    expose:
      - 8083
    networks:
      - crime-network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  mongo-db:
    image: mongo:4.0.5
    hostname: mongo-db
    container_name: mongo-db
    expose:
      - 27017
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-db:/data
    networks:
      - crime-network

  ui:
    build: ./ui
    image: ui
    container_name: ui
    expose:
      - 3000
    volumes:
      - ./ui/public:/code/public
      - ./ui/src:/code/src
    env_file:
      - .env
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=ui
    networks:
      - crime-network
    stdin_open: true
    depends_on:
      - crimes-api

  users-api:
    build: ./users-api
    image: users-api
    container_name: users-api
    expose:
      - 5002
    volumes:
      - ./users-api/users_api:/code/users_api
    environment:
      - SERVICE_TAGS=dev
      - SERVICE_NAME=user-producer
      - UVICORN_PORT=5002
      - UVICORN_HOST=0.0.0.0
      - UVICORN_ROOT_PATH=/api/v2/
    depends_on:
      - mongo-db
    networks:
      - crime-network

  connect:
    image: confluentinc/cp-kafka-connect-base:latest
    build:
      context: .
      dockerfile: Dockerfile-MongoConnect
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    expose:
      - 8083
    networks:
      - crime-network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  mongo-db:
    image: mongo:4.0.5
    hostname: mongo-db
    container_name: mongo-db
    expose:
      - 27017
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-db:/data
    networks:
      - crime-network

networks:
  crime-network:
    driver: bridge
